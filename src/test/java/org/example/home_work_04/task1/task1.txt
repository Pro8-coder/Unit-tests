1)  Почему использование тестовых заглушек может быть полезным при написании модульных 
тестов?

Использование тестовых заглушек может быть полезным при написании модульных тестов, 
потому что они позволяют вам имитировать поведение зависимостей или внешних компонентов 
во время тестирования. Тестовые заглушки предоставляют контролируемую среду, в которой 
вы можете проверить правильность работы вашего кода, независимо от внешних факторов.

2) Какой тип тестовой заглушки следует использовать, если вам нужно проверить, что 
метод был вызван с определенными аргументами?

Если вам нужно проверить, что метод был вызван с определенными аргументами, вы можете 
использовать тестовую заглушку, которая принимает входные аргументы и записывает их 
для последующей проверки. Этот тип тестовой заглушки обычно называется "заглушкой для 
записи входных аргументов".

3) Какой тип тестовой заглушки следует использовать, если вам просто нужно вернуть 
определенное значение или исключение в ответ на вызов метода?

Если вам просто нужно вернуть определенное значение или исключение в ответ на вызов 
метода, вы можете использовать тестовую заглушку, которая возвращает фиксированное 
значение или исключение. Этот тип тестовой заглушки обычно называется "заглушкой для 
фиксации возвращаемых значений".

4) Какой тип тестовой заглушки вы бы использовали для имитации  взаимодействия с 
внешним API или базой данных?

Если вам нужно имитировать взаимодействие с внешним API или базой данных, вы можете 
использовать тестовую заглушку, которая имитирует поведение внешнего API или базы 
данных. Этот тип тестовой заглушки обычно называется "заглушкой для имитации внешних 
зависимостей". Такая заглушка может возвращать заранее определенные данные или 
имитировать определенные операции, чтобы позволить вам протестировать код, 
взаимодействующий с внешними компонентами.
